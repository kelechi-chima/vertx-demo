version: '3.5'

networks:
  rmoff_kafka:
    name: rmoff_kafka

services:
  mongo:
    image: mongo:4.2.16-bionic
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=profiles
    volumes:
      - ./init/mongo:/docker-entrypoint-initdb.d

  postgres:
    build:
      context: .
      dockerfile: postgres-dockerfile
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: galkaev

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.6
    networks:
      - rmoff_kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:5.5.6
    ports:
      - "19092:19092"
    networks:
      - rmoff_kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  activemq:
    image: rmohr/activemq:5.15.9-alpine
    ports:
      - "5672:5672"

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
